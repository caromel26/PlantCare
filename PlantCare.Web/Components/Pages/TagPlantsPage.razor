@page "/tags/plants/{id:int}"

@using PlantCare.Web.Models
@using PlantCare.Web.Services
@using MudBlazor
@using static MudBlazor.Icons

@inject ApiConnectionService<Tag> TagService
@inject ApiConnectionService<Plant> PlantsService
@inject ApiConnectionService<PlantTag> PlantTagsService
@inject NavigationManager Navigation

<MudContainer MaxWidth="MaxWidth.Medium" Class="page-container">
    <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="GoBack">Back</MudButton>
    <MudText Typo="Typo.h4" Class="my-4">Plants of @Tag?.Name</MudText>

    @if (PlantList == null)
    {
        <MudProgressCircular Indeterminate="true" Class="loading-spinner" />
    }
    else if (PlantList.Count == 0)
    {
        <MudText>No plants found with this tag.</MudText>
    }
    else
    {
        <MudGrid Spacing="3">
            @foreach (var plant in PlantList)
            {
                <MudItem xs="12" sm="6" md="4" lg="3">
                    <MudCard Class="card border-success shadow">
                        <MudCardContent>
                            <MudText Typo="Typo.h6">@plant.Name</MudText>
                            <MudText>Last Watering Date: @plant.LastWateringDate?.ToString("yyyy-MM-dd")</MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    }
</MudContainer>

@code {
    [Parameter]
    public int Id { get; set; }

    Tag Tag;
    List<Plant> PlantList;

    protected override async Task OnInitializedAsync()
    {
        Tag = await TagService.GetByIdAsync("Tags", Id);

        var plantTags = await PlantTagsService.GetAllAsync("PlantTags");
        var plantIds = plantTags.Where(pt => pt.TagId == Id).Select(pt => pt.PlantId).ToList();

        var allPlants = await PlantsService.GetAllAsync("Plants");
        PlantList = allPlants.Where(p => plantIds.Contains(p.Id) && p.IsActive).ToList();
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/tags");
    }
}
